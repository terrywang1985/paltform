version: '3.8'

services:
  # API 网关服务
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-service
      - payment-service
      - backstage-service
    networks:
      - platform-network
    restart: on-failure

  # MySQL数据库
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: platform
      MYSQL_USER: user
      MYSQL_PASSWORD: password
#    ports:
#      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - platform-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存 - 移除端口映射，只在内部网络可用
  redis:
    image: redis:alpine
    # 注释掉端口映射，不再暴露到主机
    # ports:
    #   - "6379:6379"
    networks:
      - platform-network

  # 认证服务 - 移除端口映射
  auth-service:
    build:
      context: .  # 使用项目根目录作为构建上下文
      dockerfile: auth-service/Dockerfile
    # 注释掉端口映射，通过网关访问
    # ports:
    #   - "8081:8081"
    depends_on:
      - mysql
      - redis
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: platform
      REDIS_HOST: redis:6379  # 使用容器名访问，Docker内部DNS解析
      JWT_SECRET: your_jwt_secret_key_here
      SHARED_INTERNAL_TOKEN: default_internal_token_change_in_production
    networks:
      - platform-network
    restart: on-failure

  # 用户服务 - 移除端口映射
  user-service:
    build:
      context: .  # 使用项目根目录作为构建上下文
      dockerfile: user-service/Dockerfile
    # 注释掉端口映射，通过网关访问
    # ports:
    #   - "8082:8082"
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: platform
    networks:
      - platform-network
    restart: on-failure

  # 支付服务 - 移除端口映射
  payment-service:
    build:
      context: .  # 使用项目根目录作为构建上下文
      dockerfile: payment-service/Dockerfile
    # 注释掉端口映射，通过网关访问
    # ports:
    #   - "8083:8083"
    depends_on:
      - mysql
      - redis
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: platform
      REDIS_HOST: redis:6379  # 使用容器名访问，Docker内部DNS解析
    networks:
      - platform-network
    restart: on-failure

  # 后台服务 - 移除端口映射
  backstage-service:
    build:
      context: .  # 使用项目根目录作为构建上下文
      dockerfile: backstage-service/Dockerfile
    # 注释掉端口映射，通过网关访问
    # ports:
    #   - "8084:8084"
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: platform
    networks:
      - platform-network
    restart: on-failure

volumes:
  mysql_data:

networks:
  platform-network:
    driver: bridge